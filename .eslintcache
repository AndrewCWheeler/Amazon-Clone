[{"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/reportWebVitals.js":"1","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/App.js":"2","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Header.js":"3","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/index.js":"4","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Home.js":"5","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Product.js":"6","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Checkout.js":"7","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Subtotal.js":"8","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/StateProvider.js":"9","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/reducer.js":"10","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/CheckoutProduct.js":"11","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Login.js":"12","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Payment.js":"13","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/axios.js":"14","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Orders.js":"15","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Order.js":"16","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/firebase.js":"17"},{"size":362,"mtime":1606762073644,"results":"18","hashOfConfig":"19"},{"size":1836,"mtime":1607125757323,"results":"20","hashOfConfig":"19"},{"size":2060,"mtime":1607126387988,"results":"21","hashOfConfig":"19"},{"size":689,"mtime":1606861512614,"results":"22","hashOfConfig":"19"},{"size":2355,"mtime":1606773962402,"results":"23","hashOfConfig":"19"},{"size":1017,"mtime":1607035084122,"results":"24","hashOfConfig":"19"},{"size":1068,"mtime":1607111704230,"results":"25","hashOfConfig":"19"},{"size":1006,"mtime":1607125760791,"results":"26","hashOfConfig":"19"},{"size":472,"mtime":1606860839852,"results":"27","hashOfConfig":"19"},{"size":1062,"mtime":1607125758472,"results":"28","hashOfConfig":"19"},{"size":1091,"mtime":1607126264581,"results":"29","hashOfConfig":"19"},{"size":1773,"mtime":1607034101306,"results":"30","hashOfConfig":"19"},{"size":4647,"mtime":1607130754167,"results":"31","hashOfConfig":"19"},{"size":156,"mtime":1607136457781,"results":"32","hashOfConfig":"19"},{"size":858,"mtime":1607125954973,"results":"33","hashOfConfig":"19"},{"size":1019,"mtime":1607126202157,"results":"34","hashOfConfig":"19"},{"size":627,"mtime":1607033397488,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vv9lho",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/reportWebVitals.js",[],["79","80"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/App.js",["81","82"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Checkout from './Checkout';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport { Payment } from './Payment';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { Orders } from './Orders';\n\nconst promise = loadStripe('pk_test_51GvQePKA8MgT44kMkOez7O3ZOz0qrPiSgMBXk9Jhjx7zEiVvABKfgSFaMW72cAAkDH8qK9AApTCNyx7wUeDrTpae004NaoVDP1');\n\nfunction App() {\n\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n\n    auth.onAuthStateChanged(authUser => {\n      console.log('THE USER IS >>>> ', authUser);\n      if (authUser) {\n        // the user just loggin in / the user was logged in\n\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        })\n      }\n      else {\n        // the user is logged out\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n      }\n    })\n  }, []);\n\n  return (\n    // BEM\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path='/orders'>\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path='/payment'>\n            <Header />\n            <Elements stripe={promise}> \n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["83","84"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Header.js",["85"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/index.js",[],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Home.js",[],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Product.js",["86"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Checkout.js",["87"],"import React from 'react';\nimport './Checkout.css';\nimport CheckoutProduct from './CheckoutProduct';\nimport { useStateValue } from './StateProvider';\nimport Subtotal from './Subtotal';\n\nfunction Checkout() {\n  const [{basket, user}, dispatch] = useStateValue();\n  \n  return (\n    <div className='checkout'>\n      <div className=\"checkout__left\">\n        <img className='checkout__ad' src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" alt=\"\"/>\n        \n        <h3>Hello, {user?.email}</h3>\n        <div>\n          <h2 className=\"checkout__title\">\n            Your shopping Basket\n          </h2>\n\n          {basket.map((item, i) => (\n            <CheckoutProduct\n              key={i}\n              id={item.id}\n              title={item.title}\n              image={item.image}\n              price={item.price}\n              rating={item.rating}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"checkout__right\">\n        <Subtotal />\n      </div>\n    </div>\n  )\n}\n\nexport default Checkout\n",["88","89"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Subtotal.js",["90"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/StateProvider.js",[],["91","92"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/reducer.js",[],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/CheckoutProduct.js",["93"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Login.js",[],["94","95"],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Payment.js",["96"],"import React, {useState, useEffect } from 'react';\nimport axios from './axios';\nimport CheckoutProduct from './CheckoutProduct';\nimport './Payment.css';\nimport { useStateValue } from './StateProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport { getBasketTotal } from './reducer';\nimport { db } from './firebase';\n\nexport const Payment = () => {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState('');\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n\n  useEffect(() => {\n    // generate the special stripe secret that allows us to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        // Stripe expects the total in a currency's subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n      });\n      setClientSecret(response.data.clientSecret)\n    }\n    getClientSecret();\n  }, [basket]);\n\n  console.log('THE SECRET IS >>>>', clientSecret);\n\n  const handleSubmit = async (event) => {\n    // do all the fancy strip stuff...\n    event.preventDefault();\n    setProcessing(true);\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({ paymentIntent }) => {\n      // paymentIntent = payment confirmation\n\n      db.collection('users')\n        .doc(user?.uid)\n        .collection('orders')\n        .doc(paymentIntent.id)\n        .set({\n          basket: basket,\n          amount: paymentIntent.amount,\n          created: paymentIntent.created\n        })\n\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n\n      dispatch({\n        type: 'EMPTY_BASKET'\n      })\n\n      history.replace('/orders')\n    })\n\n    // const payload = await stripe\n  }\n\n  const handleChange = event => {\n    // Listen for changes in the CardElement\n    // and display any errors aws the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : '');\n  }\n\n  return (\n    <div className='payment'>\n      <div className=\"payment__container\">\n        {/* Payment section - delivery address  */}\n        <h1>\n          Checkout (<Link to='/checkout'>{basket?.length} items</Link>)\n        </h1>\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Delivery Address</h3>\n          </div>\n          <div className=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 React Lane</p>\n            <p>Los Angeles, CA</p>\n          </div>\n        </div>\n        {/* Payment section - Review Items */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div className=\"payment__items\">\n            {basket.map((item, i) => (\n              <CheckoutProduct\n                key={i}\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n              />\n            ))}\n          </div>\n        </div>\n        {/* Payment section - payment method  */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Payment Method</h3>\n          </div>\n          <div className=\"payment__details\">\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n              <div className=\"payment__priceContainer\">\n                <CurrencyFormat \n                renderText = {(value) => (\n                  <h3>Order Total: {value}</h3>\n                )}\n                decimalScale={2}\n                value={getBasketTotal(basket)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={\"$\"}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                </button>\n              </div>\n              {error && <div>{error}</div>}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/axios.js",[],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Orders.js",["97","98"],"import React, {useState, useEffect} from 'react';\nimport './Orders.css';\nimport {db} from './firebase';\nimport { useStateValue } from './StateProvider';\nimport Order from './Order';\n\nexport const Orders = () => {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    if(user) {\n    db.collection('users')\n    .doc(user?.uid)\n    .collection('orders')\n    .orderBy('created', 'desc')\n    .onSnapshot(snapshot => (\n      setOrders(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })))\n    ))\n    } else {\n      setOrders([])\n    }\n  }, [user]);\n\n  return (\n    <div className='orders'>\n      <h1>Your Orders</h1>\n      <div className=\"orders__order\">\n        {orders?.map(order => (\n          <Order order={order} />\n        ))}\n      </div>\n    </div>\n  )\n}\n","/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/Order.js",[],"/Users/andrew/CodingDojo/Projects/Amazon-full-stack/amazon-clone/src/firebase.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":19,"column":10,"nodeType":"105","messageId":"106","endLine":19,"endColumn":12},{"ruleId":"107","severity":1,"message":"108","line":41,"column":6,"nodeType":"109","endLine":41,"endColumn":8,"suggestions":"110"},{"ruleId":"99","replacedBy":"111"},{"ruleId":"101","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":26,"nodeType":"115","messageId":"116","endLine":10,"endColumn":34},{"ruleId":"113","severity":1,"message":"117","line":7,"column":12,"nodeType":"115","messageId":"116","endLine":7,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":8,"column":26,"nodeType":"115","messageId":"116","endLine":8,"endColumn":34},{"ruleId":"99","replacedBy":"118"},{"ruleId":"101","replacedBy":"119"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":20,"nodeType":"115","messageId":"116","endLine":10,"endColumn":28},{"ruleId":"99","replacedBy":"120"},{"ruleId":"101","replacedBy":"121"},{"ruleId":"113","severity":1,"message":"117","line":6,"column":11,"nodeType":"115","messageId":"116","endLine":6,"endColumn":17},{"ruleId":"99","replacedBy":"122"},{"ruleId":"101","replacedBy":"123"},{"ruleId":"113","severity":1,"message":"124","line":44,"column":11,"nodeType":"115","messageId":"116","endLine":44,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":8,"column":12,"nodeType":"115","messageId":"116","endLine":8,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":8,"column":28,"nodeType":"115","messageId":"116","endLine":8,"endColumn":36},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["127"],["125"],["126"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.",["125"],["126"],["125"],["126"],["125"],["126"],"'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [dispatch]",{"range":"130","text":"131"},[1147,1149],"[dispatch]"]